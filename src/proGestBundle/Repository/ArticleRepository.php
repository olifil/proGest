<?php

namespace proGestBundle\Repository;

use Doctrine\ORM\EntityRepository;

use proGestBundle\Entity\PrixMultiple;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{

  public function findAllOrderASC()
  {
    $qb = $this->createQueryBuilder('a');
  	$qb  -> select('a')
  	     -> orderBy('a.nom', 'ASC');

  	$array = $qb->getQuery()
  	     -> getResult();

  	return $array;
  }

  public function findPricesOrderASC($id)
  {
    $qb = $this->_em->createQueryBuilder();

    $qb->select('p')
       ->from('proGestBundle:PrixMultiple', 'p')
       ->where('p.article = :id')
       ->setParameter('id', $id)
       ->orderBy('p.quantite', 'ASC');

    return $qb->getQuery()
              ->getResult();
  }

  public function findPricesOrderDESC($id)
  {
    $qb = $this->_em->createQueryBuilder();

    $qb->select('p')
       ->from('proGestBundle:PrixMultiple', 'p')
       ->where('p.article = :id')
       ->setParameter('id', $id)
       ->orderBy('p.quantite', 'DESC');

    return $qb->getQuery()
              ->getResult();
  }

  public function findArticlesLike( $term, $alreadyAddedProduct = null, $limit = 10 )
  {

  	$qb = $this->createQueryBuilder('a');
  	$qb -> select('a.id, a.reference, a.nom, a.descriptif, a.prixAchat, a.stock')
  	    -> where('a.reference LIKE :term')
      	-> setParameter('term', '%'.$term.'%')
        -> andWhere('a.stock > 0');

    if ( $alreadyAddedProduct != null && count($alreadyAddedProduct) != 0) {
      foreach ($alreadyAddedProduct as $key => $value) {
        $qb -> andWhere('a.id != :id')
            -> setParameter('id', $value['id']);
      }
    }

  	$qb ->setMaxResults($limit);

  	$arrayAss= $qb->getQuery()
  	->getArrayResult();

  	// Transformer le tableau associatif en un tableau standard
  	$array = array();
  	foreach($arrayAss as $data)
  	{
  		$array[] = array("id"=>$data['id'], "reference"=>$data['reference'], "nom"=>$data['nom'], "descriptif"=>$data['descriptif'], "prixAchat"=>$data['prixAchat'], "stock"=>$data['stock'], "prixMultiple"=>array());
  	}

  	return $array;
  }
}
